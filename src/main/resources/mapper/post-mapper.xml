<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "htttp://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.iqiu_backend.dao.PostMapper">

    <select id="selectPosts" resultType="com.example.iqiu_backend.dto.PostsAndCommunityDTO">
        select p.id as postId, c.community_name as communityName, c.follower_count as followerCount, p.title as title,
        p.content as content, p.like_count as likeCount, p.poster_id as posterId, p.create_time as createTime
        from posts as p
        left join community as c
        on p.community_id = c.id
        where 1 = 1
        order by p.create_time
        limit #{offset}, #{limit}
    </select>

    <select id="selectCommunityIdByPostsId" resultType="int">
        select community_id
        from posts
        where id = #{postsId}
    </select>

    <insert id="insertPost" parameterType="com.example.iqiu_backend.entity.Posts" useGeneratedKeys="true" keyProperty="id">
        insert into posts
        (poster_id,title,content,post_type,create_time,community_id,like_count,like_users)
        value (#{posterId},#{title},#{content},#{postType},#{createTime},#{communityId},#{likeCount},#{likeUsers})
    </insert>

    <select id="selectPostDetail" parameterType="int" resultType="com.example.iqiu_backend.dto.PostDetailDTO">
        SELECT pd.postId,pd.userId,pd.userName,pd.createTime,pd.location,
            pd.communityId,pd.communityName,pd.followerCount,pd.title,pd.content,pd.postType,
            pd.ballType,pd.peopleCount,pd.ballLocation,
            COUNT(comment.`id`) AS commentCount,
            CONCAT(
                '[',
                GROUP_CONCAT(
                    JSON_OBJECT(
                        'commentId',comment.`id`,'commentType',comment.`comment_type`,
                        'commentUserId',comment.`user_id`,
                        'commentContent',comment.`content`,
                        'commentCreateTime',comment.`create_time`
                    )
                    SEPARATOR ','
                ),
                ']'
            ) AS `comment`
        FROM(
            SELECT p.`id` AS postId,u.`id` AS userId,u.`username` AS userName,
                p.`create_time` AS createTime,u.`location`,c.`id` AS communityId,
                c.`community_name` AS communityName,c.`follower_count` AS followerCount,
                p.`title`,p.`content`,p.`post_type` AS postType,p.`ball_type` AS ballType,
                p.`people_counts` AS peopleCount,p.`location` AS ballLocation
            FROM posts AS p,users AS u,community AS c
            WHERE p.`id`=#{postId} AND p.`poster_id`=u.`id` AND c.`id`=p.`community_id`
        ) pd
        LEFT JOIN `comment`
        ON `comment`.`post_id`=pd.postId
        GROUP BY pd.postId
    </select>

</mapper>